name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt, clippy
        
      - name: Build debug
        run: cargo build --verbose
        
      - name: Build release
        run: cargo build --release --verbose
  
      - uses: actions/upload-artifact@master
        with:
          name: cargo-artefacts
          path: target
          
  nightly-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
        
      - name: Build debug
        continue-on-error: true
        run: cargo build --verbose
        
      - name: Build release
        continue-on-error: true
        run: cargo build --release --verbose
  
      - uses: actions/upload-artifact@master
        continue-on-error: true
        with:
          name: nightly-cargo-artefacts
          path: target
          
  beta-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest beta
        uses: actions-rs/toolchain@v1
        with:
            toolchain: beta
            override: true
            components: rustfmt, clippy
        
      - name: Build debug
        continue-on-error: true
        run: cargo build --verbose
        
      - name: Build release
        continue-on-error: true
        run: cargo build --release --verbose
  
      - uses: actions/upload-artifact@master
        continue-on-error: true
        with:
          name: nightly-cargo-artefacts
          path: target
        
  tests:
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt, clippy
        
      - uses: actions/download-artifact@master
        with:
          name: cargo-artefacts
          path: target
          
      - name: Check code format
        run: cargo fmt --all -- --check
        
      - name: Check lints
        run: cargo clippy
        
      - name: Run cargo-tarpaulin in debug
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: "-- --test-threads 1"
          
      - name: Run cargo-tarpaulin in release
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: "--release -- --test-threads 1"

      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: cobertura.xml
          
  nightly-tests:
    runs-on: ubuntu-latest
    needs: ['nightly-build']
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy
        
      - uses: actions/download-artifact@master
        with:
          name: nightly-cargo-artefacts
          path: target
          
      - name: Check code format
        continue-on-error: true
        run: cargo fmt --all -- --check
      
      - name: Check lints
        continue-on-error: true
        run: cargo clippy
        
      - name: Run cargo-tarpaulin in debug
        continue-on-error: true
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: "-- --test-threads 1"
          
      - name: Run cargo-tarpaulin in release
        continue-on-error: true
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: "--release -- --test-threads 1"
          
  beta-tests:
    runs-on: ubuntu-latest
    needs: ['beta-build']
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: beta
            override: true
            components: rustfmt, clippy
        
      - uses: actions/download-artifact@master
        with:
          name: nightly-cargo-artefacts
          path: target
          
      - name: Check code format
        continue-on-error: true
        run: cargo fmt --all -- --check
      
      - name: Check lints
        continue-on-error: true
        run: cargo clippy
        
      - name: Run cargo-tarpaulin in debug
        continue-on-error: true
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: "-- --test-threads 1"
          
      - name: Run cargo-tarpaulin in release
        continue-on-error: true
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: "--release -- --test-threads 1"
          
  coverage:
    runs-on: ubuntu-latest
    needs: ['tests']
    if: success()
    steps:
      - uses: actions/download-artifact@master
        continue-on-error: true
        with:
          name: coverage
          path: cobertura.xml

      - name: Upload to codecov.io
        continue-on-error: true
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}
